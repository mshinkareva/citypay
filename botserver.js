import fs from 'fs';
import async from 'async';
import config from './config'
import { users, auth, getTokenFromDB} from './models'
import * as yamoney from './yamoney';
import { recognizeQR } from './utils/funcs'

const tg = require('telegram-node-bot')(config.bot_token);
console.log('Citypay started!!!');

//  For downloaded pictures
if (!fs.existsSync('./temp')) {
    fs.mkdirSync('./temp');
}


const aboutChoices = ['–û –±–æ—Ç–µ', 'about'];
const helloChoices = ['start', '–ø–æ–º–æ—â—å', '–ø–æ–º–æ–≥–∏', 'help', '–ø—Ä–∏–≤–µ—Ç, hello'];
const authChoices = ['auth', '–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', '–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è'];
const confirmAuthChoices = ['confirmAuth'];
const electroChoices = ['—Å–≤–µ—Ç', '—ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏—è', '—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ'];
const cellChoices = ['mobile', '–º–æ–±–∏–ª—å–Ω—ã–π', '—Å–æ—Ç–æ–≤—ã–π', '—Å–æ—Ç–∫–∞', '—Å–≤—è–∑—å', '—Ç–µ–ª', '–º—Ç—Å', '–º–µ–≥–∞—Ñ–æ–Ω', '–±–∏–ª–∞–π–Ω'];


const ABOUT_CONTROLLER = 'aboutController';
const HELLO_CONTROLLER = 'helloController';
const AUTH_CONTROLLER = 'authController';
const CONFIRM_AUTH_CONTROLLER = 'confirmAuthController';
const DEFAULT_CONTROLLER = 'defaultController';
const CELLPHONE_CONTROLLER = 'cellPhoneController';
const ELECTRO_CONTROLLER = 'electroController';


tg.router
    .when(aboutChoices, ABOUT_CONTROLLER)
    .when(helloChoices, HELLO_CONTROLLER)
    .when(authChoices, AUTH_CONTROLLER)
    .when(confirmAuthChoices, CONFIRM_AUTH_CONTROLLER)
    .when(electroChoices, ELECTRO_CONTROLLER)
    .when(cellChoices, CELLPHONE_CONTROLLER)
    .otherwise(DEFAULT_CONTROLLER);

tg.controller(ABOUT_CONTROLLER, $ => {
    const aboutBot =
        `–ü—Ä–∏–≤–µ—Ç, —è - –±–æ—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π. –Ø —É–º–µ—é –ø–ª–∞—Ç–∏—Ç—å –∑–∞ —Å–≤–µ—Ç. –ù–µ—Å—É —Å–≤–µ—Ç –ª—é–¥—è–º, —Ç–∞–∫ —Å–∫–∞–∑–∞—Ç—å ‚òÄ. –ò –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω —É–º–µ—é. –ú–µ–Ω—è —Å–¥–µ–ª–∞–ª–∏ –≤–æ –≤—Ä–µ–º—è —Ö–∞–∫–∞—Ç–æ–Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–µ–Ω–µ–≥.`;
    $.sendMessage(aboutBot);
});


tg.controller(HELLO_CONTROLLER, $ => {
    const user_name = $.user.first_name;
    users.findOne({user: $.user.id})
        .then(doc => {
            if (doc) {
                console.log(`User ${user_name} connected!`);
                $.runMenu({
                    message: `${user_name}, –í—ã —É–∂–µ —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã —ã –Ø–Ω–¥–µ–∫—Å.–î–µ–Ω—å–≥–∞—Ö. –ß—Ç–æ —Ö–æ—Ç–µ–ª–∏ –±—ã –æ–ø–ª–∞—Ç–∏—Ç—å?`,
                    '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å QR –∫–æ–¥': () => { $.sendMessage('–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é QR –∫–æ–¥–∞ —Å –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏.') },
                    '–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞': () => { $.routeTo('/mobile') }
                })
            } else {
                $.runMenu({message: `–£–≤–∞–∂–∞–µ–º—ã–π ${user_name}, –í—ã –º–æ–∂–µ—Ç–µ —Å—Ä–∞–∑—É –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –≤ –Ø–Ω–¥–µ–∫—Å.–î–µ–Ω—å–≥–∞—Ö, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –±–µ–∑ –ø—Ä–æ–º–µ–¥–ª–µ–Ω–∏—è –ø–ª–∞—Ç–∏—Ç—å –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏.`,
                    '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ –Ø–Ω–¥–µ–∫—Å.–î–µ–Ω—å–≥–∞—Ö': () => { $.routeTo('/auth') },
                    '–û –±–æ—Ç–µ': () => { $.routeTo('/about') }
                });
            }
        });
});


tg.controller(DEFAULT_CONTROLLER, $ => {
    users.findOne({user: $.user.id})
        .then(doc => {
            if (!doc) {
                $.sendMessage('–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ –Ø–Ω–¥–µ–∫—Å.–î–µ–Ω—å–≥–∞—Ö. –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å–æ –º–Ω–æ–π, –¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ–π–¥–µ–º —ç—Ç—É –Ω–µ–±–æ–ª—å—à—É—é –ø—Ä–æ—Ü–µ–¥—É—Ä—É =)');
                $.routeTo('/start');
            } else {
                if (($.message.contact) || ($.message.text && ($.message.text.startsWith('+7')))) {
                    let phone = parsePhoneNumber($.message);
                    if (phone) return payPhone($, phone);
                }

                if ($.message.photo) {
                    return recognizeQR(tg, $.message.photo, (err, text) => {
                        if (err) return $.sendMessage('–§–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –º–Ω–µ –ø—Ä–∏—Å–ª–∞–ª–∏, –Ω–µ –æ—á–µ–Ω—å-—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ QR-–∫–æ–¥!'+
                            '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞—Ç—å –±–æ–ª–µ–µ —á—ë—Ç–∫–æ–µ –∏ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ–µ —Ñ–æ—Ç–æ');
                        if (text.includes('–ü–µ—Ç—Ä–æ—ç–ª–µ–∫—Ç—Ä–æ—Å–±—ã—Ç')) {
                            console.log(text);
                            return payPSB($, text);
                        } else {
                            $.sendMessage('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –ø–æ–∫–∞ –Ω–µ —É–º–µ—é –ø–ª–∞—Ç–∏—Ç—å –≤ —ç—Ç—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é. ' +
                                '–ù–æ –¥–ª—è –≤–∞—Å —è –º–æ–≥—É —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç QR-–∫–æ–¥: ' + text);
                        }
                    });
                }

                if ($.message.text) {
                    $.sendMessage('–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—É =(. –î–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º —Ç–æ, —á—Ç–æ —è —É–º–µ—é!');
                    $.routeTo('/start')
                } else {
                    $.sendMessage('–ú–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å QR –∫–æ–¥ —Å –∫–≤–∏—Ç–∞–Ω—Ü–∏–π. –ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ –∏ —è –ø–æ–ø—Ä–æ–±—É—é!')
                }
            }
        }
    );
});


tg.controller(AUTH_CONTROLLER, $ => {
    const authUrl = yamoney.getAuthURI($.user.id);
    $.runMenu({
        message: `–î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤–∞–º –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –Ø–Ω–¥–µ–∫—Å.–î–µ–Ω–µ–≥ –ø–æ —Å—Å—ã–ª–∫–µ:\n${authUrl}\n` +
        '–ö–∞–∫ —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –±—É–¥–µ—Ç –∑–∞–∫–æ–Ω—á–µ–Ω–∞, –Ω–∞–∂–º–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
        '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é': () => { $.routeTo('/confirmAuth') }
    });
});


tg.controller(CONFIRM_AUTH_CONTROLLER, $ => {
    const userId = $.user.id;

    auth.findOne({user: userId})
        .then(doc => {
            if (doc) {
                console.log(`Found temp code for user ${userId}. Trying to generate access token`);
                yamoney.getToken(config.yandex_money.clientId, doc.code, config.yandex_money.redirectURI,
                    (err, data) => {
                        if (err) {
                            console.log(`Error while get access token: ${err.message}`);
                            return
                        }

                        users.findOne({user: userId}).then(userRecord => {
                            if (userRecord) {
                                users.update({user: userId}, { $set: {token: data.access_token} }).then(() => {
                                    console.log(`User ${userId} updated access token`);
                                    $.sendMessage('–í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–∏–ª–∏ —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ø–Ω–¥–µ–∫—Å.–î–µ–Ω–µ–≥!');
                                });
                            } else {
                                users.insert({user: userId, token: data.access_token}).then(() => {
                                    console.log(`User ${userId} obtained new access token`);
                                    $.sendMessage('–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤ –Ø–Ω–¥–µ–∫—Å.–î–µ–Ω—å–≥–∞—Ö!' +
                                        '–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–ª–∞—Ç–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏.');
                                });
                            }
                        })
                    });
            } else {
                $.runMenu({
                    message: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é =(.' +
                    '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –µ—â–µ —Ä–∞–∑ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞',
                    '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é': () => { $.routeTo('/confirmAuth') },
                    '–û—Ç–º–µ–Ω–∞': () => $.sendMessage('–ë–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å –ø–ª–∞—Ç–µ–∂–∏. ' +
                        '–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –Ø–Ω–¥–µ–∫—Å.–î–µ–Ω—å–≥–∏ –∏–ª–∏ –∫ –º–æ–µ–º—É —Å–æ–∑–¥–∞—Ç–µ–ª—é.')
                })
            }
        });
});


tg.controller(CELLPHONE_CONTROLLER, $ => {
    let message =
        '–°–µ–π—á–∞—Å —è –ø–æ–ø–æ–ª–Ω—é –±–∞–ª–∞–Ω—Å –∞–±—Å–æ–ª—é—Ç–Ω–æ –ª—é–±–æ–≥–æ –º–æ–±–∏–ª—å–Ω–æ–≥–æ, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –¥–∞–¥–∏—Ç–µ (–µ—Å–ª–∏ –æ–Ω —Ä–æ—Å—Å–∏–π—Å–∫–∏–π üá∑üá∫).' +
        '–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –∏–∑ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–π –∫–Ω–∏–≥–∏ –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –≤–∏–¥–µ XXXXXXX (–±–µ–∑ +7)';
    $.sendMessage(message);
    $.waitForRequest($ => {
        let phone = parsePhoneNumber($.message);
        if (phone) {
            payPhone($, phone);
        } else {
            $.sendMessage('–£ –º–µ–Ω—è –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!');
        }
    });
});


function parsePhoneNumber(message) {
    let phone = null;
    if (message.contact) {
        phone = message.contact.phone_number;
    } else {
        let text = (message.text || '').replace(/[^0-9]/g, '');
        if (text.length === 11) phone = text;
    }
    return phone
}


function payPhone($, phone) {
    $.sendMessage(`–í—Å—ë —É–∂–µ –≥–æ—Ç–æ–≤–æ, —á—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –Ω–æ–º–µ—Ä–∞ ${phone}. –°–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –ø–æ–ª–æ–∂–∏—Ç—å –Ω–∞ —Å—á–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–Ω–µ –±–æ–ª—å—à–µ 500 —Ä.)?`);
    $.waitForRequest($ => {
        const amount = parseInt($.message.text);
        if (amount && amount < 100) {
            getTokenFromDB($.user.id).then(token => {
                yamoney.payPhone(phone, amount, token, err => {
                    if (err) {
                        console.log(err)
                        $.sendMessage('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ —É –º–µ–Ω—è –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –≤–∞—à–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
                    } else {
                        $.sendMessage(`–ú—ã —Å –≤–∞–º–∏ –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –±–∞–ª–∞–Ω—Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ${phone} –Ω–∞ ${amount} —Ä.! –ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞!`);
                    }
                });
            });
        } else {
            $.sendMessage('–£–∫–∞–∑–∞–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞.')
        }
    })
}


function payPSB($, text) {
    const abNum = text.split('|').map((x) => x.split('=')).filter((x) => x[0] == 'Persacc')[0][1];
    $.sendMessage('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –§.–ò.–û. –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –≤ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É:');
    $.waitForRequest($ => {
        const fullName = $.message.text;
        $.sendMessage('–°–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ –æ–ø–ª–∞—Ç—É —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–∞?');
        $.waitForRequest($ => {
            const sum = parseInt($.message.text);
            if (sum) {
                $.sendMessage('–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ —Å—á–µ—Ç—á–∏–∫–æ–≤ –∑–∞ –¥–µ–Ω—å –∏ –Ω–æ—á—å —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª (–µ—Å–ª–∏ —Å—á–µ—Ç—á–∏–∫ –æ–¥–Ω–æ—Ç–∞—Ä–∏—Ñ–Ω—ã–π, –Ω–æ—á–Ω–æ–π –º–æ–∂–µ—Ç–µ –Ω–µ –≤–≤–æ–¥–∏—Ç—å :) ).');
                $.waitForRequest($ => {
                    const counts = $.message.text.split(' ');
                    const countsDay = counts[0];
                    const countsNight = (counts.length > 1) ? counts[1] : '';

                    getTokenFromDB($.user.id).then(token => {
                        yamoney.payPSB(abNum, sum, fullName, countsDay, countsNight, token,
                            (err) => {
                                console.log(err);
                                if (err) return $.sendMessage('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä–∏ –ø–ª–∞—Ç–µ–∂–µ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :(');
                                $.sendMessage('–û–ø–ª–∞—Ç–∞ —Å—á–µ—Ç–∞ –∑–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!');
                            });
                    })
                });
            } else {
                $.sendMessage('–£–∫–∞–∑–∞–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞');
            }
        });
    });
}